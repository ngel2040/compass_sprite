@import 'compass/css3';
@import "compass/utilities/sprites";


@function generateSelector($items) {
    $temps: ();
    @each $item in $items{
        $temps: join($temps, unquote('.#{$item}'), comma);
    }
    @return $temps;
}

//sprite
@mixin sprite($glob, $prefix: "") {
  $map: sprite-map($glob, $layout: smart, $spacing: 20);
  $all-items: sprite-names($map);

    .#{$prefix}, #{generateSelector($all-items)} {
      display:inline-block;
      position:relative;
      overflow:hidden;
      background-image: sprite-url($map);
      background-repeat: no-repeat;
      span{
        display:inline-block;
        text-indent:-9999em;
        outline:0;
      }
    }

  @each $name in $all-items{
    .#{$name} {
      width:image-width(sprite-file($map, #{$name}));
      height:image-height(sprite-file($map, #{$name}));
      background-position: sprite-position($map, #{$name});
    }
  }
}

//retina sprite
@mixin retina_sprite($glob, $prefix: "") {
  $map: sprite-map($glob, $layout: smart); //, $spacing: 2px
  $all-items: sprite-names($map);

    .#{$prefix}, #{generateSelector($all-items)} {
      background-image: sprite-url($map);
      background-repeat: no-repeat;
      @include background-size(ceil(image-width(sprite-path($map)) / 2) auto);
    }

  @each $name in $all-items{
    .#{$name} {
      width:image-width(sprite-file($map, #{$name}));
      height:image-height(sprite-file($map, #{$name}));
      background-position: round(nth(sprite-position($map, #{$name}), 1) / 2) round(nth(sprite-position($map, #{$name}), 2) / 2);
    }
  }
}